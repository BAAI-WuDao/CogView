{"version":3,"sources":["default-items.js","texts.js","App.js","reportWebVitals.js","index.js"],"names":["original","description","title","zh","en","name_placeholder","name_prompt","input_placeholder","input_prompt","warning_text","regenerate","generate","show_history","queue_list","author_prompt","create_time_prompt","generate_time_prompt","history_records","task_not_found","plz_regenerate","generate_fail","plz_regenerate_or_other","submitted_and_queue","generating","generate_and_wait","input_name_not_empty","input_length_not_valid","submit_too_fast","service_err","translation_succeed","translation_failed","load_history_records","generation_succeed_all_img","request_failed","switch_lang","github","API_HREF","USERNAME_CACHE_KEY","App","props","detectTrans","_","debounce","console","log","state","query","trim","length","setState","enableTrans","lang","franc","model","username","localStorage","getItem","loading","task","undefined","displayHistory","historyTasks","waitingTasks","navigator","language","userLanguage","poll_process","poll_interval","last_submit_time","refreshWaitingTasks","refresh_process","setInterval","refreshHistoryTasks","axios","get","then","resp","data","tasks","catch","err","t","code","dict","text","texts","this","Object","keys","forEach","key","replace","dateformat","Date","post","status","message","success","warning","error","disabled","className","style","backgroundImage","process","id","Group","size","placeholder","prefix","UserOutlined","suffix","ArrowRightOutlined","color","value","onChange","e","target","PictureOutlined","TranslationOutlined","onClick","translate","onPressEnter","showHistory","window","location","href","info","updateHistory","clearInterval","_id","num_images","force_refresh","now","setItem","task_id","poll","subTitle","icon","SisternodeOutlined","LoadingOutlined","showIndex","showFullscreenButton","showPlayButton","items","range","map","url","qid","created_time","thumbnail","height","width","DefaultItems","item","CheckCircleOutlined","StopOutlined","WarningOutlined","placement","closable","onClose","visible","itemLayout","dataSource","renderItem","historyTask","Item","actions","Meta","avatar","renderIcon","datestr","parseInt","updated_time","waitingTask","idx","backgroundSize","renderLogin","renderTask","renderDefaultPlay","renderWaitingList","renderHistory","Component","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.d8623e2a.chunk.js","sourcesContent":["export default [{\n    original: `/get-image/3ce89ac028c09b64/1616143211249/1.jpg`,\n    description: '老虎踢足球'\n}, {\n    original: `/get-image/5a55d16995103768/1616141359829/0.jpg`,\n    description: '猫猪'\n}, {\n    original: `/get-image/7602ae509c1eb89c/1616125734465/0.jpg`,\n    description: '皮卡丘口红'\n}, {\n    original: `/get-image/85adf33bcb311930/1616081204688/9.jpg`,\n    description: '一个心酸的博士生'\n}, {\n    original: `/get-image/c74715b9c09200c7/1616058920240/1.jpg`,\n    description: '骑在狗上的人。'\n}, {\n    original: '/get-image/750c997a71df19c8/1616059211648/0.jpg',\n    description: '骑在树上的人。'\n}, {\n    original: '/get-image/4420193de4b0a18b/1616066682360/8.jpg',\n    description: '一只戴墨镜的猫趴在桌子上。'\n}, {\n    original: '/get-image/43bd1e21199290a4/1616070424178/0.jpg',\n    description: '一条小溪在山涧流淌'\n}]","export default {\n    title: {\n        zh: \"根据文字描述生成图片的人工智能\",\n        en: \"Generating Images from Text Descriptions\"\n    },\n    name_placeholder: {\n        zh: \"请输入您的名字或昵称\",\n        en: \"Enter you username\"\n    },\n    name_prompt: {\n        zh: \"您的昵称\",\n        en: \"Name\"\n    },\n    input_placeholder: {\n        zh: \"请输入您想要生成的图片描述\",\n        en: \"Enter the text description for your desired image\"\n    },\n    input_prompt: {\n        zh: \"图片描述\",\n        en: \"Image Description\"\n    },\n    warning_text: {\n        zh: \"CogView生成模型仅支持简体中文输入。\",\n        en: \"The CogView generation model only supports simplified Chinese input. You can use the translation button in the input box to translate the input text into Chinese.\"\n    },\n    regenerate: {\n        zh: \"重新生成\",\n        en: \"Regenerate\"\n    },\n    generate: {\n        zh: \"生成\",\n        en: \"Generate\"\n    },\n    show_history: {\n        zh: \"查看历史\",\n        en: \"Show History\"\n    },\n    queue_list: {\n        zh: \"排队列表（当前数量：%size）\",\n        en: \"Queue (Current waiting: %size)\"\n    },\n    author_prompt: {\n        zh: \"作者：\",\n        en: \"Author: \"\n    },\n    create_time_prompt: {\n        zh: \"创建时间：\",\n        en: \"Create Time: \"\n    },\n    generate_time_prompt: {\n        zh: \"生成时间：\",\n        en: \"Generate Time: \"\n    },\n    history_records: {\n        zh: \"历史记录\",\n        en: \"History Records\"\n    },\n    task_not_found: {\n        zh: \"未找到生成任务\",\n        en: \"Task Not Found\"\n    },\n    plz_regenerate: {\n        zh: \"请重新生成\",\n        en: \"Please Regenerate\"\n    },\n    generate_fail: {\n        zh: \"生成失败\",\n        en: \"Generation Failed\"\n    },\n    plz_regenerate_or_other: {\n        zh: \"请重新生成，或尝试其他文本进行生成\",\n        en: \"Please regenerate or try other inputs\"\n    },\n    submitted_and_queue: {\n        zh: \"已提交，正在排队中\",\n        en: \"Submitted. Task waiting in queue now.\"\n    },\n    generating: {\n        zh: \"正在生成中\",\n        en: \"Generating\"\n    },\n    generate_and_wait: {\n        zh: \"生成一般需要几分钟时间，请耐心等待结果\",\n        en: \"Generation usually takes several minutes. Please wait for a while.\"\n    },\n    input_name_not_empty: {\n        zh: \"输入的昵称不能为空\",\n        en: \"Your name must not be empty.\"\n    },\n    input_length_not_valid: {\n        zh: \"输入的图片描述长度在2～30之间，当前长度：%size\",\n        en: \"The number of characters in input image description must be between 2 and 30. Current length: %size\"\n    },\n    submit_too_fast: {\n        zh: \"提交时间过快，请稍等片刻。\",\n        en: \"Submission too fast. Please wait for a while.\"\n    },\n    service_err: {\n        zh: \"服务异常：%err\",\n        en: \"Service error: %err\"\n    },\n    translation_succeed: {\n        zh: \"翻译成功。\",\n        en: \"Translation succeed. \"\n    },\n    translation_failed: {\n        zh: \"翻译失败。\",\n        en: \"Translation failed. \"\n    },\n    load_history_records: {\n        zh: \"加载%size条历史记录。\",\n        en: \"Load %size history records.\"\n    },\n    generation_succeed_all_img: {\n        zh: \"生成成功！总共生成%size张图片。\",\n        en: \"Generation succeed. %size images generated in total.\"\n    },\n    request_failed: {\n        zh: \"请求失败：\",\n        en: \"Request failed:\"\n    },\n    switch_lang: {\n        zh: \"English Display\",\n        en: \"中文界面\"\n    },\n    github: {\n        zh: \"Github\",\n        en: \"Github\"\n    }\n}","import 'antd/dist/antd.css'\nimport 'react-image-gallery/styles/css/image-gallery.css'\nimport './App.css'\nimport './header.css'\nimport './history.css'\nimport { Input, message, Button, Result, Drawer, List, Divider } from 'antd'\nimport ImageGallery from 'react-image-gallery'\nimport { TranslationOutlined, UserOutlined, ArrowRightOutlined, CheckCircleOutlined, StopOutlined, LoadingOutlined, SisternodeOutlined, PictureOutlined, WarningOutlined } from '@ant-design/icons'\nimport { Component } from 'react'\nimport _ from 'lodash'\nimport axios from 'axios'\nimport DefaultItems from './default-items'\nimport franc from 'franc-min'\nimport texts from './texts'\nimport dateformat from 'dateformat'\n\n// const API_HREF = (process.env.NODE_ENV === 'production') ? (process.env.PUBLIC_URL +'/api') : 'https://lab.aminer.cn/cogview/api'// 'http://localhost:19385'\nconst API_HREF = 'https://wudao.aminer.cn/api/cogview/'\n\nconst USERNAME_CACHE_KEY = 'cogview.v1.username'\n\nexport default class App extends Component {\n    constructor(props) {\n      super(props)\n      this.state = {\n        model: 'login',\n        username: localStorage.getItem(USERNAME_CACHE_KEY) || '',\n        query: '一只戴墨镜的猫趴在桌子上。',\n        loading: false,\n        task: undefined,\n        displayHistory: false,\n        historyTasks: [],\n        waitingTasks: [],\n        enableTrans: false,\n        lang: (navigator.language || navigator.userLanguage) === 'en' ? 'en' : 'zh'\n      }\n      this.poll_process = undefined\n      this.poll_interval = 5\n      this.last_submit_time = 0\n      this.refreshWaitingTasks()\n      this.refresh_process = setInterval(() => {\n        this.refreshWaitingTasks()\n        this.refreshHistoryTasks()\n      }, 5000)\n    }\n\n    refreshWaitingTasks() {\n      axios.get(`${API_HREF}/waiting`).then(resp => {\n        this.setState({waitingTasks: resp.data.tasks})\n      }).catch(err => {\n        console.log(this.t(\"service_err\", {err}))\n      })\n    }\n\n    refreshHistoryTasks() {\n      axios.get(`${API_HREF}/history`).then(resp => {\n        this.setState({historyTasks: resp.data.tasks})\n      }).catch(err => {\n        console.log(this.t(\"service_err\", {err}))\n      })\n    }\n\n    t(code, dict) {\n      let text = texts[code][this.state.lang]\n      if (dict) {\n        Object.keys(dict).forEach(key => {\n          text = text.replace('%' + key, dict[key])\n        })\n      }\n      return text\n    }\n\n    datestr(t) {\n      return dateformat(new Date(t), \"yyyy/mm/dd h:MM:ss\")\n    }\n\n    detectTrans = _.debounce(() => {\n      console.log('length', this.state.query.trim().length)\n        if (this.state.query.trim().length < 5) this.setState({enableTrans: false})\n        const lang = franc(this.state.query + ' ')\n        this.setState({enableTrans: lang !== 'cmn' && lang !== 'und'})\n    }, 500)\n\n    translate() {\n      this.setState({loading: true})\n      axios.post(`${API_HREF}/translate`, {query: this.state.query}).then(resp => {\n        const data = resp.data\n        if (data.status) {\n          this.setState({loading: false, enableTrans: false, query: data.text})\n          message.success(this.t(\"translation_succeed\"))\n        } else {\n          this.setState({loading: false, enableTrans: false})\n          message.warning(this.t(\"translation_failed\") + data.message)\n        }\n      }).catch(err => {\n        this.setState({loading: false, enableTrans: false})\n        message.error(this.t(\"service_err\", {err}))\n      })\n    }\n\n    renderLogin() {\n      const disabled = this.state.query.trim().length < 2 || this.state.username.trim().length === 0 || this.state.query.trim().length > 30\n      return (\n        <div className=\"login\">\n          <div className=\"logo\" style={{backgroundImage: `url(${process.env.PUBLIC_URL + '/logo.png'})`}}/>\n          <div id=\"logo-description\">{this.t(\"title\")}</div>\n          <Input.Group className=\"login-input\">\n            <Input\n              size=\"large\"\n              placeholder={this.t(\"name_placeholder\")}\n              prefix={<div><UserOutlined className=\"site-form-item-icon\" /><span className=\"input-inner-header\">{this.t(\"name_prompt\")}</span></div>}\n              suffix={\n                <ArrowRightOutlined className=\"btn\" style={{color: 'white'}}/>\n              }\n              value={this.state.username}\n              onChange={e => this.setState({username: e.target.value})}\n            />\n          </Input.Group>\n          <Input.Group className=\"login-input\">\n            <Input\n              size=\"large\"\n              placeholder={this.t(\"input_placeholder\")}\n              prefix={<div><PictureOutlined className=\"site-form-item-icon\" /><span className=\"input-inner-header\">{this.t(\"input_prompt\")}</span></div>}\n              suffix={\n                <div>\n                  {this.state.enableTrans && <TranslationOutlined className=\"enter-btn\" style={{color: this.state.loading ? 'lightgray' : 'black'}} onClick={() => this.translate()}/>}\n                  <ArrowRightOutlined className=\"enter-btn\" style={{color: disabled ? 'lightgray' : 'black'}} onClick={() => this.generate()}/>\n                </div>\n              }\n              value={this.state.query}\n              onChange={e => {\n                this.detectTrans()\n                this.setState({query: e.target.value})\n              }}\n              onPressEnter={() => this.generate()}\n            />\n          </Input.Group>\n          <div className=\"login-btns\">\n            <div className=\"prompt\">\n              <p>{this.t(\"warning_text\")}</p>\n            </div>\n            {(this.state.task !== undefined && this.state.task.status === 'Succeed' && this.state.task.query === this.state.query.trim()) ?\n              <Button className=\"wbtn login-btn\" onClick={() => this.generate(true)} disabled={disabled}>{this.t(\"regenerate\")}</Button> :\n              <Button className=\"wbtn login-btn\" onClick={() => this.generate()} disabled={disabled}>{this.t(\"generate\")}</Button>\n            }\n            <Button className=\"wbtn history-display-btn\" onClick={() => this.showHistory()}>{this.t(\"show_history\")}</Button>\n            <Button className=\"wbtn lang-btn\" onClick={() => this.setState({lang: this.state.lang === 'zh' ? 'en' : 'zh'})}>{this.t(\"switch_lang\")}</Button>\n            <Button className=\"wbtn github-btn\" onClick={() => window.location.href = 'https://github.com/THUDM/CogView'}>{this.t(\"github\")}</Button>\n          </div>\n        </div>\n      )\n    }\n\n    updateHistory(displayHistory) {\n      this.setState({loading: true})\n      axios.get(`${API_HREF}/history`).then(resp => {\n        this.setState({loading: false, historyTasks: resp.data.tasks, displayHistory})\n        message.info(this.t(\"load_history_records\", {size: resp.data.tasks.length}))\n      }).catch(err => {\n        message.error(this.t(\"service_err\", {err}))\n        this.setState({loading: false})\n      })\n    }\n\n    showHistory() {\n      if (this.state.historyTasks.length === 0) {\n        this.updateHistory(true)\n      } else {\n        this.setState({displayHistory: true})\n      }\n    }\n\n    poll(task) {\n      if (task === undefined) task = this.state.task\n      if (task === undefined || task.status === 'Succeed' || task.status === 'Fail') return\n      if (this.poll_process) clearInterval(this.poll_process)\n      this.poll_process = setInterval(() => {\n        axios.get(`${API_HREF}/get/${task._id}`).then(resp => {\n          const task = resp.data.task\n          if (task.status === 'Succeed' || task.status === 'Fail') {\n            clearInterval(this.poll_process)\n            if (task.status === 'Succeed') message.success(this.t(\"generation_succeed_all_img\", {size: task.num_images}))\n          }\n          if (task._id !== this.state.task._id || task.status !== this.state.task.status) this.setState({task})\n        }).catch(err => {\n          message.error(this.t(\"service_err\", {err}))\n          clearInterval(this.poll_process)\n        })\n      }, this.poll_interval * 1000)\n    }\n\n    generate(force_refresh) {\n      if (force_refresh === undefined) force_refresh = false\n      if (this.poll_process) clearInterval(this.poll_process)\n      if (this.state.username.trim().length === 0) {\n        message.warning(this.t(\"input_name_not_empty\"))\n        this.setState({task: undefined})\n      }\n      else if (this.state.query.trim().length < 2 || this.state.query.trim().length > 30) {\n        message.warning(this.t(\"input_length_not_valid\", {size: this.state.query.trim().length}))\n        this.setState({task: undefined})\n      }\n      else if (Date.now() - this.last_submit_time < 5000) {\n        message.warning(this.t(\"submit_too_fast\"))\n        this.setState({task: undefined})\n      }\n      else {\n        this.last_submit_time = Date.now()\n        localStorage.setItem(USERNAME_CACHE_KEY, this.state.username)\n        this.setState({loading: true, task: undefined})\n        axios.post(`${API_HREF}/generate`, {username: this.state.username, query: this.state.query, force_refresh, lang: this.state.lang}).then(resp => {\n          const status = resp.data.status\n          if (!status) {\n            message.info(`${this.t(\"request_failed\")}${resp.data.message}`)\n            this.setState({loading: false})\n            return\n          }\n          const task_id = resp.data._id\n          axios.get(`${API_HREF}/get/${task_id}`).then(resp => {\n            const task = resp.data.task\n            if (task.status === 'Succeed') message.success(this.t(\"generation_succeed_all_img\", {size: task.num_images}))\n            this.setState({loading: false, task})\n            this.poll(task)\n          }).catch(err => {\n            message.error(this.t(\"service_err\", {err}))\n            this.setState({loading: false})\n          })\n        }).catch(err => {\n          message.error(this.t(\"service_err\", {err}))\n          this.setState({loading: false})\n        })\n      }\n    }\n\n    renderTask() {\n      const task = this.state.task\n      const status = task ? task.status : 'Not Found'\n      return <div className=\"task-display\">\n        {status === 'Not Found' && <Result\n          status=\"warning\"\n          title={this.t(\"task_not_found\")}\n          subTitle={this.t(\"plz_regenerate\")}\n        />}\n        {status === 'Fail' && <Result\n          status=\"error\"\n          title={this.t(\"generate_fail\")}\n          subTitle={this.t(\"plz_regenerate_or_other\")}\n        />}\n        {status === 'Created' && <Result\n          icon={<SisternodeOutlined/>}\n          title={this.t(\"submitted_and_queue\")}\n          subTitle=\"\"\n        />}\n        {status === 'Running' && <Result\n          icon={<LoadingOutlined/>}\n          title={this.t(\"generating\")}\n          subTitle={this.t(\"generate_and_wait\")}\n        />}\n        {status === 'Succeed' && <ImageGallery\n          showIndex={true}\n          showFullscreenButton={false}\n          showPlayButton={false}\n          items={_.range(task.num_images).map(key => {\n            const url = `${API_HREF}/get-image/${task.qid}/${task.created_time}/${key}.jpg`\n            return { original: url, thumbnail: url, height: 96, width: 96 }\n          })}\n        />}\n      </div>\n    }\n\n    renderDefaultPlay() {\n      return <div className=\"task-display\">\n        <ImageGallery\n          className=\"task-image-gallery\"\n          showIndex={true}\n          showFullscreenButton={false}\n          showPlayButton={false}\n          items={DefaultItems.map(item => {\n            const url = `${API_HREF}${item.original}`\n            return { ...item, original: url, thumbnail: url }\n          })}\n        />\n      </div>\n    }\n\n    renderIcon(status) {\n      if (status === 'Succeed') return <CheckCircleOutlined style={{color: '#73d13d'}}/>\n      if (status === 'Fail') return <StopOutlined style={{color: '#ff7a45'}}/>\n      if (status === 'Created') return <SisternodeOutlined style={{color: '#40a9ff'}}/>\n      if (status === 'Running') return <LoadingOutlined style={{color: '#36cfc9'}}/>\n      return <WarningOutlined style={{color: '#ffec3d'}}/>\n    }\n\n    renderHistory() {\n      return <Drawer\n        title={\n          <div className=\"history-title\">\n            <span>{this.t(\"history_records\")}</span>\n          </div>\n        }\n        placement=\"right\"\n        closable={true}\n        onClose={() => this.setState({displayHistory: false})}\n        visible={this.state.displayHistory}\n        width={'300px'}\n      >\n        <List\n          itemLayout=\"horizontal\"\n          dataSource={this.state.historyTasks}\n          renderItem={historyTask => {\n            return <List.Item actions={[]}>\n              <List.Item.Meta\n                className=\"history-item\"\n                avatar={this.renderIcon(historyTask.status)}\n                title={historyTask.query}\n                description={<div className=\"history-description\">\n                  <p>{`${this.t(\"author_prompt\")}${historyTask.username}`}</p>\n                  <p>{`${this.t(\"create_time_prompt\")}${this.datestr(historyTask.created_time)}`}</p>\n                  <p>{`${this.t(\"generate_time_prompt\")}${this.datestr(parseInt(historyTask.updated_time))}`}</p>\n                </div>}\n                onClick={() => {\n                  if (this.poll_process) clearInterval(this.poll_process)\n                  this.setState({query: historyTask.query, task: historyTask, displayHistory: false})\n                }}\n              />\n            </List.Item>\n          }}\n        />\n      </Drawer>\n    }\n\n    componentWillUnmount() {\n      if (this.poll_process) clearInterval(this.poll_process)\n    }\n\n    renderWaitingList() {\n      return <div className=\"waiting-list\">\n        <Divider>{this.t(\"queue_list\", {size: (this.state.waitingTasks.length >= 20) ? '≥20' : this.state.waitingTasks.length})}</Divider>\n        <div className=\"items\">\n          {this.state.waitingTasks.map((waitingTask, idx) => {\n            return <div className=\"item\" key={idx}>\n              {this.renderIcon(waitingTask.status)}\n              <div className=\"content\">\n                <span className=\"title\">{waitingTask.query}</span>\n                <br/>\n                <span className=\"time\">[{this.datestr(waitingTask.created_time)}]</span>\n                <span className=\"author\">（{waitingTask.username}）</span>\n              </div>\n            </div>\n          })}\n        </div>\n      </div>\n    }\n\n    render() {\n      return (\n        <div className=\"App\" style={{backgroundImage: `url(${process.env.PUBLIC_URL}/background.jpg)`, backgroundSize: 'cover'}}>\n          <div className=\"App-background\"/>\n          <div className=\"App-inner\">\n            {this.state.model === 'login' && this.renderLogin()}\n            {this.state.task && this.renderTask()}\n            {!this.state.task && this.renderDefaultPlay()}\n            {this.renderWaitingList()}\n          </div>\n          {this.renderHistory()}\n          {this.state.loading && <div className=\"loading-mask\">\n            <div className=\"mask-inner\"><LoadingOutlined /></div>\n          </div>}\n        </div>\n      )\n    }\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}